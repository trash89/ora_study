-- non-multitenant databases (ORCL)

mkdir -p /u01/app/oracle/admin/ORCL/encryption_keystore/
ls /u01/app/oracle/admin/ORCL/encryption_keystore/

sqlplus / as sysdba
alter system set wallet_root='/u01/app/oracle/admin/ORCL/encryption_keystore' SCOPE=SPFILE;
shutdown immediate;
startup;
alter system set tde_configuration="KEYSTORE_CONFIGURATION=FILE" SCOPE=both;
host ls /u01/app/oracle/admin/ORCL/encryption_keystore/

-- Create the key store by specifying a password for the keystore.
ADMINISTER KEY MANAGEMENT CREATE KEYSTORE IDENTIFIED BY manager;
host ls /u01/app/oracle/admin/ORCL/encryption_keystore/tde
ewallet.p12

@show_tde
v$encryption_wallet
Con STATUS			   WRL_TYPE		WALLET_TYPE	     W order   Backuped  WRL_PARAMETER
--- ------------------------------ -------------------- -------------------- --------- --------- --------------------------------------------------------------------------------
  0 CLOSED			   FILE 		UNKNOWN 	     SINGLE    UNDEFINED /u01/app/oracle/admin/ORCL/encryption_keystore/tde/

no rows selected


sys.x$kcbdbk, if mkloc == 0, no encryption enabled
Con	 MKLOC
--- ----------
  0	     0

-- Open the key store by specifying the password.
ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY manager;

@show_tde
v$encryption_wallet
Con STATUS			   WRL_TYPE		WALLET_TYPE	     W order   Backuped  WRL_PARAMETER
--- ------------------------------ -------------------- -------------------- --------- --------- --------------------------------------------------------------------------------
  0 OPEN_NO_MASTER_KEY		   FILE 		PASSWORD	     SINGLE    UNDEFINED /u01/app/oracle/admin/ORCL/encryption_keystore/tde/

no rows selected


sys.x$kcbdbk, if mkloc == 0, no encryption enabled
Con	 MKLOC
--- ----------
  0	     0
  

-- Set the master key
ADMINISTER KEY MANAGEMENT SET KEY USING TAG 'master key' IDENTIFIED BY manager WITH BACKUP USING 'masterbackup';
host ls /u01/app/oracle/admin/ORCL/encryption_keystore/tde
ewallet_2025020510173722_masterbackup.p12  ewallet.p12

@show_tde
v$encryption_wallet
Con STATUS			   WRL_TYPE		WALLET_TYPE	     W order   Backuped  WRL_PARAMETER
--- ------------------------------ -------------------- -------------------- --------- --------- --------------------------------------------------------------------------------
  0 OPEN			   FILE 		PASSWORD	     SINGLE    NO	 /u01/app/oracle/admin/ORCL/encryption_keystore/tde/

v$encryption_keys
Con KEY_ID								   TAG				  USER				 KEY_USE    KEYSTORE_TYPE     BACKED_UP
--- ---------------------------------------------------------------------- ------------------------------ ------------------------------ ---------- ----------------- ---------
  0 AapoT7QwXE9evw4nK6kEmSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA		   master key			  SYS				 TDE	    SOFTWARE KEYSTORE NO

Creation Time	    Activation Time	Creator:DBNAME/PDBNAME				   Activating:DBNAME/PDBNAME
------------------- ------------------- -------------------------------------------------- --------------------------------------------------
06/03/2025 05:22:05 06/03/2025 05:22:05 ORCL/						   ORCL/

1 row selected.


sys.x$kcbdbk, if mkloc == 0, no encryption enabled
Con	 MKLOC
--- ----------
  0	     1


CREATE TABLESPACE encrypted_ts DATAFILE '/u02/oradata/ORCL/encrypted_ts01.dbf' SIZE 1M AUTOEXTEND ON NEXT 1M
ENCRYPTION USING 'AES256' DEFAULT STORAGE(ENCRYPT);
  
CREATE USER test IDENTIFIED BY test DEFAULT TABLESPACE encrypted_ts temporary tablespace temp;
ALTER USER test QUOTA UNLIMITED ON encrypted_ts;
GRANT CONNECT TO test;
GRANT CREATE TABLE TO test;
  
conn test/test

DROP TABLE tde_test;
PURGE RECYCLEBIN;

CREATE TABLE tde_test (
  id    NUMBER(10),
  data  VARCHAR2(50) ENCRYPT
)
TABLESPACE encrypted_ts;

INSERT INTO tde_test (id, data) VALUES (1, 'This is a secret!');
COMMIT;
 
conn / as sysdba
ALTER SYSTEM FLUSH BUFFER_CACHE;

shutdown immediate;
startup;

conn test/test

SQL> SELECT * FROM test.tde_test;
SELECT * FROM test.tde_test
                   *
ERROR at line 1:
ORA-28365: wallet is not open

conn / as sysdba
ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY manager;

conn test/test
SELECT * FROM test.tde_test;
SQL> 
	ID DATA
---------- --------------------------------------------------
	 1 This is a secret!

1 row SELECTed.


-- Create autologin for the key store.
conn / as sysdba
ADMINISTER KEY MANAGEMENT CREATE AUTO_LOGIN KEYSTORE FROM KEYSTORE IDENTIFIED BY manager;
host ls /u01/app/oracle/admin/ORCL/encryption_keystore/tde
cwallet.sso  ewallet_2025020510173722_masterbackup.p12	ewallet.p12

@show_tde
dba_encrypted_columns
Table							     COLUMN_NAME		    Encryption Alg		   Integrity Al
------------------------------------------------------------ ------------------------------ ------------------------------ ------------
TEST.TDE_TEST						     DATA			    AES 192 bits key		   SHA-1

1 row selected.


v$encryption_wallet
Con STATUS			   WRL_TYPE		WALLET_TYPE	     W order   Backuped  WRL_PARAMETER
--- ------------------------------ -------------------- -------------------- --------- --------- --------------------------------------------------------------------------------
  0 OPEN			   FILE 		PASSWORD	     SINGLE    NO	 /u01/app/oracle/admin/ORCL/encryption_keystore/tde/

v$encryption_keys
Con KEY_ID								   TAG				  USER				 KEY_USE    KEYSTORE_TYPE     BACKED_UP
--- ---------------------------------------------------------------------- ------------------------------ ------------------------------ ---------- ----------------- ---------
  0 AapoT7QwXE9evw4nK6kEmSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA		   master key			  SYS				 TDE	    SOFTWARE KEYSTORE NO

Creation Time	    Activation Time	Creator:DBNAME/PDBNAME				   Activating:DBNAME/PDBNAME
------------------- ------------------- -------------------------------------------------- --------------------------------------------------
06/03/2025 05:22:05 06/03/2025 05:22:05 ORCL/						   ORCL/

1 row selected.


sys.x$kcbdbk, if mkloc == 0, no encryption enabled
Con	 MKLOC
--- ----------
  0	     1

shutdown immediate
startup

conn test/test
SELECT * FROM test.tde_test;
ID DATA
---------- --------------------------------------------------
	 1 This is a secret!

1 row SELECTed.


-- Change Keystore Password
-- Key store password could be changed by specifying the old password and the new password.
conn / as sysdba
ADMINISTER KEY MANAGEMENT ALTER KEYSTORE PASSWORD FORCE KEYSTORE 
IDENTIFIED BY manager --old password
SET manager123  -- new password
WITH BACKUP USING 'pwd_change';
host ls -lrt /u01/app/oracle/admin/ORCL/encryption_keystore/tde
-rw------- 1 oracle oinstall 2553 Feb  5 11:17 ewallet_2025020510173722_masterbackup.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:54 ewallet_2025020510540071_pwd_change.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:54 ewallet.p12
-rw------- 1 oracle oinstall 4214 Feb  5 11:54 cwallet.sso


-- Data Pump Export and Import with Encryption

-- Exporting
-- Even when TDE is setup if encryption parameters are not used in expdp, the resulting dump file will be unencrypted.
expdp system/manager directory=DATA_PUMP_DIR dumpfile=test.dmp schemas=test

strings /u01/app/oracle/admin/orcl/dpdump/test.dmp | grep secret*
This is a secret!

-- To encrypt an export use encryption_mode and encryption paramters.
expdp system/manager directory=DATA_PUMP_DIR dumpfile=test2.dmp schemas=test ENCRYPTION_MODE=TRANSPARENT ENCRYPTION=all
-- The resulting dump file is encrypted.
strings /u01/app/oracle/admin/orcl/dpdump/test2.dmp | grep secret*

-- Importing
-- To import FROM an encrypted, simply run the import command as usual provided TDE is setup and wallet is open.
impdp system/manager directory=DATA_PUMP_DIR dumpfile=test2.dmp schemas=test


RMAN Backup with Encryption
There are multiple ways to enable encryption for backups. The easiest and simplest way is to configure default rman configuration to use encryption.
CONFIGURE ENCRYPTION FOR DATABASE ON;
CONFIGURE ENCRYPTION ALGORITHM 'AES256';
This will make every backup run an ecnrypted backup.
RMAN> backup datafile 5 tag='default backup';

TAG                              ENC
-------------------------------- ---
DEFAULT BACKUP                   YES
This could be overriden with set encryption.
RMAN> set encryption off;
RMAN> backup datafile 5 tag='enc off';

TAG                              ENC
-------------------------------- ---
ENC OFF                          NO
If an tablespace is already encrypted and backup taken is an encrypted backup then the encrypted blocks are passed through to backup unchnaged. 
Only the unencrypted blocks are encrypted during backup.


Rekeying Master key
Rekeying master key may be needed as part of regulatory compliance or if it's suspected the master key is compromised. 
Rekeying creates a new master key and activates it. If the DB is part of a data guard configuration then rekeying will stop the redo apply 
until new key is available on the standby. Considering this and below points before rekeying.
1. Before rekeying is attempted verify that tablespaces are not under going an online rekeying themselves. 
If the status is REKEYING instead of NORMAL then do not attempt rekeying master key until tablespace rekeying completes.
SQL> SELECT TS#,ENCRYPTIONALG,STATUS FROM V$ENCRYPTED_TABLESPACES;

       TS# ENCRYPT STATUS
---------- ------- ----------
      	 6 AES256  NORMAL
2. Use "SET KEY" to rekey a new master key.
ADMINISTER KEY MANAGEMENT SET KEY using tag 'new key' FORCE KEYSTORE IDENTIFIED BY manager WITH BACKUP USING 'new key backup';
host ls -lrt /u01/app/oracle/admin/ORCL/encryption_keystore/tde
-rw------- 1 oracle oinstall 2553 Feb  5 11:17  ewallet_2025020510173722_masterbackup.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:54  ewallet_2025020510540071_pwd_change.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:55  ewallet_2025020510551152_pwd_change2.p12
-rw------- 1 oracle oinstall 4169 Feb  5 17:10 'ewallet_2025020516100229_new key backup.p12'
-rw------- 1 oracle oinstall 5609 Feb  5 17:10  ewallet.p12
-rw------- 1 oracle oinstall 5654 Feb  5 17:10  cwallet.sso


3. Verify the new key is added.
v$encryption_wallet
Con STATUS			   WRL_TYPE		WALLET_TYPE	     W order   Backuped  Mode	  WRL_PARAMETER
--- ------------------------------ -------------------- -------------------- --------- --------- -------- --------------------------------------------------------------------------------
  0 OPEN			   FILE 		AUTOLOGIN	     SINGLE    NO	 NONE	  /u01/app/oracle/admin/orcl/encryption_keystore/tde/

v$encryption_keys
Con KEY_ID								   TAG				  USER				 KEY_USE    KEYSTORE_TYPE     BACKED_UP
--- ---------------------------------------------------------------------- ------------------------------ ------------------------------ ---------- ----------------- ---------
  0 AbdnaclU0U9Ev+sbR2VSeS4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA		   master key			  SYS				 TDE	    SOFTWARE KEYSTORE YES
  0 AZWk5KaW/0+fv4+LAGbVqhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA		   new key			  SYS				 TDE	    SOFTWARE KEYSTORE NO

Creation Time	    Activation Time	Creator:DBNAME/PDBNAME				   Activating:DBNAME/PDBNAME
------------------- ------------------- -------------------------------------------------- --------------------------------------------------
05/02/2025 10:17:37 05/02/2025 10:17:37 orcl/						   orcl/
05/02/2025 16:10:02 05/02/2025 16:10:02 orcl/						   orcl/

2 rows SELECTed.


sys.x$kcbdbk
Con If == 0, no encryption enabled
--- ------------------------------
  0				 1

Backup Keystore

Backup the key store with the following command. Optionally a backup tag could be specified.
ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE USING 'backup_tag' FORCE KEYSTORE IDENTIFIED BY manager;

The backup file will have the backup tag appended to the file name
host ls -lrt /u01/app/oracle/admin/ORCL/encryption_keystore/tde
-rw------- 1 oracle oinstall 2553 Feb  5 11:17  ewallet_2025020510173722_masterbackup.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:54  ewallet_2025020510540071_pwd_change.p12
-rw------- 1 oracle oinstall 4169 Feb  5 11:55  ewallet_2025020510551152_pwd_change2.p12
-rw------- 1 oracle oinstall 4169 Feb  5 17:10 'ewallet_2025020516100229_new key backup.p12'
-rw------- 1 oracle oinstall 5609 Feb  5 17:11  ewallet_2025020516113860_backup_tag.p12
-rw------- 1 oracle oinstall 5609 Feb  5 17:11  ewallet.p12
-rw------- 1 oracle oinstall 5654 Feb  5 17:11  cwallet.sso

If backing up to a specific location then specify the backup location with "TO".
ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE USING 'backup_tag' FORCE KEYSTORE IDENTIFIED BY manager TO '/home/oracle';
host ls -lrt /home/oracle
-rw------- 1 oracle oinstall 5609 Feb  5 17:12 ewallet_2025020516122162_backup_tag.p12
